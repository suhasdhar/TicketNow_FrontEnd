{"ast":null,"code":"export default {\n  data() {\n    return {\n      category: '',\n      create: null,\n      isadmin: null,\n      name: 'AdminPortal',\n      password: '',\n      userid: '',\n      username: '',\n      validuser: null,\n      vusercreated: null,\n      vuserDeleted: null\n    };\n  },\n\n  methods: {\n    async addusertodatabase() {\n      this.validate();\n\n      if (this.validuser) {\n        const user = {};\n        user.category = this.category;\n        user.isadmin = this.isadmin;\n        user.userid = this.userid;\n        user.username = this.username;\n        user.password = this.password;\n        await fetch('http://localhost:8080/ticket-now/auth/add-user', {\n          body: JSON.stringify({\n            'password': user.password,\n            'userId': user.userid,\n            'username': user.username\n          }),\n          headers: {\n            'Accept': 'application/json, text/plain',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'category': user.category,\n            'isadmin': user.isadmin\n          },\n          method: 'POST',\n          mode: 'cors'\n        }).then(res => res.json()); // eslint-disable-next-line\n\n        console.log(user);\n      }\n    },\n\n    createUser() {\n      this.create = true;\n      this.userid = null;\n      this.validuser = null;\n    },\n\n    deleteUser() {\n      this.create = false;\n      this.userid = null;\n    },\n\n    async deleteuserfromdatabase() {\n      // eslint-disable-next-line\n      console.log(this.userid + \" **\");\n      await fetch('http://localhost:8080/ticket-now/auth/delete-user', {\n        headers: {\n          'Accept': 'application/json, text/plain',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'userid': this.userid\n        },\n        method: 'DELETE',\n        mode: 'cors'\n      }).then(res => res.json()).catch(error => {\n        // eslint-disable-next-line\n        console.log(error);\n      });\n    },\n\n    async validate() {\n      if (this.userid === '') {\n        this.validuser = false;\n        return;\n      }\n\n      await fetch('http://localhost:8080/ticket-now/auth/validate-user', {\n        headers: {\n          'Accept': 'application/json, text/plain',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'userid': this.userid\n        },\n        method: 'POST',\n        mode: 'cors'\n      }).then(res => res.json()).then(data => {\n        if (data) {\n          this.validuser = false; // eslint-disable-next-line\n\n          console.log(this.validuser);\n        } else {\n          this.validuser = true;\n        }\n      });\n    }\n\n  },\n\n  mounted() {\n    this.validuser = null;\n    this.create = null;\n  }\n\n};","map":{"version":3,"mappings":"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","names":["data","category","create","isadmin","name","password","userid","username","validuser","vusercreated","vuserDeleted","methods","addusertodatabase","validate","user","fetch","body","JSON","stringify","headers","method","mode","then","res","json","console","log","createUser","deleteUser","deleteuserfromdatabase","catch","error","mounted"],"sourceRoot":"","sources":["/Users/suhasdhar/Desktop/Development/TicketNow_front/ticket_now/src/components/AdminPortal.vue"],"sourcesContent":["<template>\n<div>\nAdmin Portal\n <br>\n\n<div > <button @click=\"this.createUser()\" >Create a user</button> <button @click=\"this.deleteUser()\">Delete a user</button> <br><br><br> </div>\n\n <!-- creating a user -->\n<div v-if=\"this.create\">\n\n\n<input type=\"text\"  value=\"Username\" disabled> <input type=\"Textbox\"  placeholder=\"Full Name\"  v-model=\"this.username\" name=\"\" id=\"\"><br>\n\n<input type=\"text\"  value=\"Userid\" disabled > <input type=\"Textarea\" @change=\"validate()\" placeholder=\"Alphanumeric without space\"  v-model=\"this.userid\" name=\"\" id=\"\"> <br>\n<div v-if=\"this.validuser!=null && !this.validuser\" id=\"alert\"> The userid already exists <br></div>\n<div v-if=\"this.validuser!=null && this.validuser\" id=\"green\"> Valid Userid <br></div>\n<input   type=\"text\"  value=\"Category\" disabled >\n\n<select id=\"Category\" name=\"category\" v-model=\"this.category\">\n    <option value=\"Hardware\">Hardware</option>\n    <option value=\"Software\">Software</option>\n    <option value=\"Operations\">Operations</option>\n    <option value=\"Human Resources\">Human Resources</option>\n    <option value=\"Human Resources\">User</option>\n\n</select> <br >\n<input   type=\"text\"  value=\"Is Admin\" disabled >\n<select id=\"Category\" name=\"category\" v-model=\"this.isadmin\">\n    <option value=\"Yes\">Yes</option>\n    <option value=\"No\">No</option>\n</select>\n<br>\n<input  type=\"text\" value=\"Password\" disabled >\n\n<input type=\"password\" v-model=\"this.password\"> <br>\n<br>\n<button @click=\"this.addusertodatabase()\"> Submit</button>\n\n</div>\n\n<!-- deleting a user -->\n<div v-if=\"(this.create===false)\">\n   <input type=\"text\" value=\"userid\" disabled>  <input type=\"text\" v-model=\"this.userid\" >\n\n   <br>\n\n   <div v-if=\"!this.validuser\" id=\"alert\"> invalid user</div>\n   <button  @click=\"deleteuserfromdatabase()\" >delete user</button>\n\n</div>\n<br>\n<button @click=\"$emit('AdminPortalValue',false)\"> Back </button>\n\n    </div>\n</template>\n<script>\nexport default {\n\n\n  data () {\n\n    return {\n      category: '',\n      create: null,\n      isadmin: null,\n      name: 'AdminPortal',\n      password: '',\n      userid: '',\n      username: '',\n      validuser: null,\n      vusercreated: null,\n      vuserDeleted: null,\n\n    };\n\n  },\n  methods: {\n    async addusertodatabase () {\n\n      this.validate();\n      if (this.validuser) {\n\n        const user = {};\n        user.category = this.category;\n        user.isadmin = this.isadmin;\n        user.userid = this.userid;\n        user.username = this.username;\n        user.password = this.password;\n        await fetch(\n          'http://localhost:8080/ticket-now/auth/add-user',\n          {\n            body: JSON.stringify({\n              'password': user.password,\n              'userId': user.userid,\n              'username': user.username,\n            }),\n            headers: {'Accept': 'application/json, text/plain',\n              'Content-Type': 'application/json;charset=UTF-8',\n              'category': user.category,\n              'isadmin': user.isadmin},\n            method: 'POST',\n            mode: 'cors'\n          }\n        ).then((res) => res.json());\n\n\n        // eslint-disable-next-line\n        console.log(user);\n\n      }\n\n\n    },\n    createUser () {\n\n      this.create = true;\n      this.userid = null;\n      this.validuser = null;\n\n    },\n    deleteUser () {\n\n      this.create = false;\n      this.userid = null;\n\n    },\n    async deleteuserfromdatabase () {\n\n      // eslint-disable-next-line\n      console.log(this.userid+\" **\");\n      await fetch(\n        'http://localhost:8080/ticket-now/auth/delete-user',\n        {\n          headers: {'Accept': 'application/json, text/plain',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'userid': this.userid},\n          method: 'DELETE',\n          mode: 'cors'\n        }\n      ).then((res) => res.json()).\n        catch((error) => {\n\n          // eslint-disable-next-line\n      console.log(error)\n        });\n\n\n    },\n    async validate () {\n\n      if (this.userid === '') {\n\n        this.validuser = false;\n        return;\n\n      }\n      await fetch(\n        'http://localhost:8080/ticket-now/auth/validate-user',\n        {\n          headers: {'Accept': 'application/json, text/plain',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'userid': this.userid},\n          method: 'POST',\n          mode: 'cors'\n        }\n      ).then((res) => res.json()).\n        then((data) => {\n\n          if (data) {\n\n            this.validuser = false;\n            // eslint-disable-next-line\n             console.log(this.validuser)\n          } else {\n\n            this.validuser = true;\n\n          }\n\n        });\n\n\n    },\n  },\n  mounted () {\n\n    this.validuser = null;\n    this.create = null;\n\n  },\n};\n\n</script>\n<style scoped>\ninput{\n\n  width : 200px;\n}\nselect{\n\nwidth : 200px;\n}\n#validate{\n    width:60px\n}\nbutton{\n\nwidth : 200px;\n}\ntable{\n  border: solid;\n align-content: center;\n}\ntd {\n  border: 1px solid black;\n  width: 100px;\n  height:10px;\n  max-width: 600px;\n overflow: hidden;\n text-overflow: ellipsis;\n white-space: nowrap;\n padding: 10px;\n}\n\n#row:hover {\n  cursor: pointer;\n  background-color: rgb(180, 213, 243)\n}\n#back:hover {\n  cursor: pointer;\n  background-color: rgb(180, 213, 243)\n}\n#alert{\n  color: red;\n}\n#green{\n  color: rgb(2, 113, 2);\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}