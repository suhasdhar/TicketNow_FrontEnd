{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode();\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_hoisted_1, _hoisted_2, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(this.comments, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item\n    }, [_createElementVNode(\"b\", null, _toDisplayString(item.username), 1\n    /* TEXT */\n    ), _createTextVNode(\" : \" + _toDisplayString(item.comment), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _withDirectives(_createElementVNode(\"textarea\", {\n    cols: \"50\",\n    rows: \"10\",\n    id: \"\",\n    required: \"\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.displayedComment = $event)\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.displayedComment]])]), _hoisted_3, _hoisted_4, _hoisted_5], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAAIA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAYRA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;;gCAAKA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;6DAbLA,oBAYM,KAZN,EAYM,IAZN,EAYM,CAXFC,UAWE,EAXEC,UAWF,qBAVNC,oBAA8FC,SAA9F,EAA8F,IAA9F,EAA8FC,iBAAtEC,QAAsE,EAAnFC,IAAqB,IAAjB;yBAAfJ,oBAA8F,IAA9F,EAA8F;MAA3DK,GAAG,EAAED;IAAsD,CAA9F,EAA4C,CAAEP,oBAAwB,GAAxB,EAAwB,IAAxB,EAAwBS,iBAAnBF,IAAI,CAACG,QAAc,CAAxB,EAAkB;IAAA;IAAlB,CAAF,mBAA0B,QAAGD,iBAAEF,IAAI,CAACI,OAAP,GAAc;IAAA;KAA3C,CAA5C;GAA8F,CAA9F;;EAAA,CAUM,mBAPFX,oBAMQ,UANR,EAMQ;IALAY,IAAI,EAAC,IAKL;IAJAC,IAAI,EAAC,IAIL;IAHAC,EAAE,EAAF,EAGA;IAFAC,QAAQ,EAAR,EAEA;+DADSC,yBAAgBC;EACzB,CANR;;EAAA,kBAKiBD,yBAEf,CAZN,GAaAE,wBAAKC","names":["_createElementVNode","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","_renderList","comments","item","key","_toDisplayString","username","comment","cols","rows","id","required","$data","$event","_hoisted_3","_hoisted_5"],"sourceRoot":"","sources":["/Users/suhasdhar/Desktop/Development/TicketNow_front/ticket_now/src/components/CommentsChat.vue"],"sourcesContent":["<template>\n<div>\n    <br><br>\n<li v-for=\"item in this.comments\" :key=\"item\"><b>{{item.username}}</b> : {{item.comment}}</li>\n\n\n    <textarea\n            cols=\"50\"\n            rows=\"10\"\n            id\n            required\n            v-model=\"displayedComment\"\n          />\n</div>\n<br> <br>\n</template>\n\n<script>\nexport default {data () {\n\n  return {\n\n    comments: {},\n    displayedComment: 'Add your comment'\n\n\n  };\n\n},\nmethods: {\n  async fetchChat () {\n\n    // eslint-disable-next-line\nconsole.log(this.ticketId)\n\n    await fetch(\n      'http://localhost:8080/ticket-now/chats',\n      {headers: {'Accept': 'application/json, text/plain',\n        'Content-Type': 'application/json;charset=UTF-8',\n        'ticketId': this.ticketId},\n      method: 'get',\n      mode: 'cors'}\n    ).then((res) => res.json()).\n      then((data) => {\n\n        this.comments = data.message;\n        // eslint-disable-next-line\n                console.log(this.comments);\n      }).\n      // eslint-disable-next-line\n        catch((error) => console.log(error));\n  },\n\n},\n\nmounted () {\n\n  // eslint-disable-next-line\n  console.log(this.ticketId);\n  this.fetchChat();\n\n},\nname: 'CommentsChat',\nprops: {\n  ticketId: String\n}};\n\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}