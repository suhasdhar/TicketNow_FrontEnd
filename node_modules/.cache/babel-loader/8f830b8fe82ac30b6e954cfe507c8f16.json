{"ast":null,"code":"import HelloWorld from './components/HelloWorld.vue';\nimport NavBar from './components/NavBar.vue';\nexport default {\n  components: {\n    HelloWorld,\n    NavBar\n  },\n\n  data() {\n    return {\n      data: {\n        'suhas': 'Rajul123.'\n      },\n      displayTickets: true,\n      login: false,\n      // eslint-disable-next-line sort-keys\n      failed: false,\n      username: '',\n      // eslint-disable-next-line sort-keys\n      pass: '',\n      user: ''\n    };\n  },\n\n  methods: {\n    disappearTickets(status) {\n      this.displayTickets = status;\n    },\n\n    async fun() {\n      this.login = true; // eslint-disable-next-line\n\n      if (this.pass === this.data.suhas) {\n        const rett = '',\n              response = await fetch('http://localhost:8080/ticket-now/auth/signin', {\n          body: JSON.stringify({\n            'password': '1234',\n            'userId': 'gxa30590'\n          }),\n          headers: {\n            'Accept': 'application/json, text/plain',\n            'Content-Type': 'application/json;charset=UTF-8'\n          },\n          method: 'POST',\n          mode: 'cors'\n        }).then(response => {\n          const reader = response.body.getReader(),\n                stream = new ReadableStream({\n            start(controller) {\n              // The following function handles each data chunk\n              function push() {\n                // \"done\" is a Boolean and value a \"Uint8Array\"\n                return reader.read().then(({\n                  done,\n                  value\n                }) => {\n                  // Is there no more data to read?\n                  if (done) {\n                    // Tell the browser that we have finished sending data\n                    controller.close();\n                    return;\n                  } // Get the data and send it to the browser via the controller\n\n\n                  controller.enqueue(value);\n                  push();\n                });\n              }\n\n              push();\n            }\n\n          });\n          return new Response(stream, {\n            headers: {\n              'Content-Type': 'text/html'\n            }\n          });\n        }).catch(error => {\n          // eslint-disable-next-line\n          console.log(error);\n        }); // eslint-disable-next-line\n\n        console.log(rett); // eslint-disable-next-line\n\n        console.log(response.body);\n        this.login = true;\n      } else {\n        // eslint-disable-next-line\n        console.log(this.user);\n        this.login = false;\n        this.failed = true;\n      }\n    }\n\n  },\n  name: 'App'\n};","map":{"version":3,"mappings":"AAsBA,OAAOA,UAAP,MAAuB,6BAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,eAAe;EACbC,UAAU,EAAE;IACVF,UADU;IAEVC;EAFU,CADC;;EAKbE,IAAG,GAAK;IAEN,OAAO;MACLA,IAAI,EAAE;QACJ,SAAS;MADL,CADD;MAILC,cAAc,EAAE,IAJX;MAKLC,KAAK,EAAE,KALF;MAML;MACAC,MAAM,EAAE,KAPH;MAQLC,QAAQ,EAAE,EARL;MASL;MACAC,IAAI,EAAE,EAVD;MAWLC,IAAI,EAAE;IAXD,CAAP;EAeD,CAtBY;;EAuBbC,OAAO,EAAE;IACPC,gBAAe,CAAGC,MAAH,EAAW;MAExB,KAAKR,cAAL,GAAsBQ,MAAtB;IAED,CALM;;IAMP,MAAMC,GAAN,GAAa;MAEX,KAAKR,KAAL,GAAa,IAAb,CAFW,CAGX;;MAEA,IAAI,KAAKG,IAAL,KAAc,KAAKL,IAAL,CAAUW,KAA5B,EAAmC;QAEjC,MAAMC,IAAG,GAAI,EAAb;QAAA,MACEC,QAAO,GAAI,MAAMC,KAAK,CACpB,8CADoB,EAEpB;UACEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YACnB,YAAY,MADO;YAEnB,UAAU;UAFS,CAAf,CADR;UAKEC,OAAO,EAAE;YAAC,UAAU,8BAAX;YACP,gBAAgB;UADT,CALX;UAQEC,MAAM,EAAE,MARV;UASEC,IAAI,EAAE;QATR,CAFoB,CAAL,CAefC,IAfe,CAeTR,QAAD,IAAc;UAEnB,MAAMS,MAAK,GAAIT,QAAQ,CAACE,IAAT,CAAcQ,SAAd,EAAf;UAAA,MACEC,MAAK,GAAI,IAAIC,cAAJ,CAAmB;YAC1BC,KAAI,CAAGC,UAAH,EAAe;cAEjB;cACA,SAASC,IAAT,GAAiB;gBAEf;gBACA,OAAON,MAAM,CAACO,IAAP,GAAcR,IAAd,CAAmB,CAAC;kBAACS,IAAD;kBAAOC;gBAAP,CAAD,KAAmB;kBAE3C;kBACA,IAAID,IAAJ,EAAU;oBAER;oBACAH,UAAU,CAACK,KAAX;oBACA;kBAEF,CAT2C,CAW3C;;;kBACAL,UAAU,CAACM,OAAX,CAAmBF,KAAnB;kBACAH,IAAI;gBAEL,CAfM,CAAP;cAiBF;;cAEAA,IAAI;YAEN;;UA5B0B,CAAnB,CADX;UAgCA,OAAO,IAAIM,QAAJ,CACLV,MADK,EAEL;YAACN,OAAO,EAAE;cAAC,gBAAgB;YAAjB;UAAV,CAFK,CAAP;QAKD,CAtDgB,EAuDfiB,KAvDe,CAuDRC,KAAD,IAAW;UAEf;UACFC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QAEC,CA5Dc,CADnB,CAFiC,CAiEjC;;QACNC,OAAO,CAACC,GAAR,CAAY1B,IAAZ,EAlEuC,CAkEnB;;QACVyB,OAAO,CAACC,GAAR,CAAYzB,QAAQ,CAACE,IAArB;QACJ,KAAKb,KAAL,GAAa,IAAb;MAEF,CAtEA,MAsEO;QAEL;QACAmC,OAAO,CAACC,GAAR,CAAY,KAAKhC,IAAjB;QACA,KAAKJ,KAAL,GAAa,KAAb;QACA,KAAKC,MAAL,GAAc,IAAd;MAEF;IAEF;;EA1FO,CAvBI;EAmHboC,IAAI,EAAE;AAnHO,CAAf","names":["HelloWorld","NavBar","components","data","displayTickets","login","failed","username","pass","user","methods","disappearTickets","status","fun","suhas","rett","response","fetch","body","JSON","stringify","headers","method","mode","then","reader","getReader","stream","ReadableStream","start","controller","push","read","done","value","close","enqueue","Response","catch","error","console","log","name"],"sourceRoot":"","sources":["/Users/suhasdhar/Desktop/Development/TicketNow_front/ticket_now/src/App.vue"],"sourcesContent":["<template>\n<div>\n  <div v-if=\"login\" > <NavBar v-on:create-new-ticket=\"disappearTickets($event)\" msg=\"hey\"/></div><br>\n  <div v-if=\"login === false\">\n    <img  alt=\"Ticket Now\" src=\"./assets/ticket.png\" />\n    <HelloWorld msg=\"Ticket Now!\" />\n    <input type=\"text\" placeholder=\"username\" v-model=\"user\">  <input type=\"password\"  placeholder=\"password\"  v-model=\"pass\" name=\"\" id=\"\">\n    <button :onclick=\"fun\" text=\"login\">login</button>\n    <h1 v-if=\"login\" > logged in </h1>\n    <h3 v-else-if=\"failed\" color=\"red\"> Bad Credentials</h3>\n\n  </div>\n  <div v-else>\n   <div>\n    </div>\n     <ul v-if=\"displayTickets\"><li><h1> tickets </h1></li><li><h1>tickets </h1></li><li><h1>tickets </h1></li><li><h1>tickets </h1></li><li><h1>tickets </h1></li><li><h1>tickets </h1></li></ul>\n     <div v-else>Creation Form</div>\n     </div>\n</div>\n\n</template>\n<script>\nimport HelloWorld from './components/HelloWorld.vue';\nimport NavBar from './components/NavBar.vue';\nexport default {\n  components: {\n    HelloWorld,\n    NavBar\n  },\n  data () {\n\n    return {\n      data: {\n        'suhas': 'Rajul123.'\n      },\n      displayTickets: true,\n      login: false,\n      // eslint-disable-next-line sort-keys\n      failed: false,\n      username: '',\n      // eslint-disable-next-line sort-keys\n      pass: '',\n      user: '',\n\n    };\n\n  },\n  methods: {\n    disappearTickets (status) {\n\n      this.displayTickets = status;\n\n    },\n    async fun () {\n\n      this.login = true;\n      // eslint-disable-next-line\n      \n      if (this.pass === this.data.suhas) {\n\n        const rett = '',\n          response = await fetch(\n            'http://localhost:8080/ticket-now/auth/signin',\n            {\n              body: JSON.stringify({\n                'password': '1234',\n                'userId': 'gxa30590',\n              }),\n              headers: {'Accept': 'application/json, text/plain',\n                'Content-Type': 'application/json;charset=UTF-8'},\n\n              method: 'POST',\n              mode: 'cors'\n\n\n            }\n          ).then((response) => {\n\n            const reader = response.body.getReader(),\n              stream = new ReadableStream({\n                start (controller) {\n\n                  // The following function handles each data chunk\n                  function push () {\n\n                    // \"done\" is a Boolean and value a \"Uint8Array\"\n                    return reader.read().then(({done, value}) => {\n\n                      // Is there no more data to read?\n                      if (done) {\n\n                        // Tell the browser that we have finished sending data\n                        controller.close();\n                        return;\n\n                      }\n\n                      // Get the data and send it to the browser via the controller\n                      controller.enqueue(value);\n                      push();\n\n                    });\n\n                  }\n\n                  push();\n\n                }\n              });\n\n            return new Response(\n              stream,\n              {headers: {'Content-Type': 'text/html'}}\n            );\n\n          }).\n            catch((error) => {\n\n              // eslint-disable-next-line\n            console.log(error);\n\n            });\n\n        // eslint-disable-next-line\n  console.log(rett);  // eslint-disable-next-line\n            console.log(response.body);\n        this.login = true;\n\n      } else {\n\n        // eslint-disable-next-line\n        console.log(this.user);\n        this.login = false;\n        this.failed = true;\n\n      }\n\n    }\n  },\n  name: 'App',\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nimg {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 5px;\n  width: 150px;\n}\n#newticket {\n\n  float: right;\n  margin-left: auto;\nmargin-right: 0;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}